#!/bin/bash
#Script to play YouTube using OMXPlayer
echo "Loading YouTube Videos..."

TMPFIL=$(tempfile --prefix=OMXt_)

# omxtuberc file: OMXPLAYER, _MPLAYER, _VLC, _AUDACIOUS, OPTS, YTUBE_DL, YT_FORMAT
[ -f $HOME/.omxtuberc ] && . $HOME/.omxtuberc
PLAYER=${OMXPLAYER:=/usr/bin/omxplayer}
#omxopts="-r -o hdmi"

[ -n "$COOKIES" ] && COOKIES="/tmp/cookies-$( date +%s.%N ).txt";
omxurls="$HOME/.omxtube.urls"
DL_OPTS="-g"
while [ $# -gt 0 ]; do
    case $1 in
	-mplayer)
	    PLAYER=${_MPLAYER:=/usr/bin/mplayer}
	    [ -z "$OPTS" ] && OPTS="-ao alsa -vo novideo -cookies -cookies-file $COOKIES"
	    ;;
	-vlc)
	    PLAYER=${_VLC:=/usr/bin/nvlc}
	    [ -z "$OPTS" ] && OPTS="--no-video --one-instance --playlist-enqueue"
	    xterm -e screen $PLAYER $OPTS &
	    sleep 2
	    ;;
	-aud)
	    PLAYER=${_AUDACIOUS:=/usr/bin/audacious}
	    [ -z "$OPTS" ] && OPTS="--enqueue"
	    $PLAYER &
	    sleep 2
	    ;;
	-d)
	    DL_OPTS=""
	    ;;
	-url)
	    shift
	    if [ -z "$1" ]; then
		[ -f $omxurls ] && grep -n ^https $omxurls
		echo -n "URL: "
		read URL
		# if the line number was given:
		[ -z "${URL##[1-9]*}" ] && URL=`grep -n ^https $omxurls |grep "^$URL:" |sed -r 's/[^:]+://'`
	    else
		URL="$1"
	    fi
	    # if only the hash of the video was given:
	    [ -n "${URL##https:*}" ] && URL="https://youtube.com/watch?v=$1"
	    # the sed expression to remove the chosen URL from omxurls...
	    SEDEX=`echo "$URL" |sed -r 's:.*\?(list|v)(=[^\& ]+).*:/\2/d:'` && echo "$SEDEX"
	    [ -f $omxurls ] && sed -ri "$SEDEX" $omxurls
	    # ... and append it to the end:
	    echo "$URL" >>$omxurls
	    # remove the comment part from the URL that was read:
	    URL=${URL/ #*/}
    esac
    shift
done
echo "player: $PLAYER"
echo "omxopts: '$OPTS'"
echo "youtube-dl: ${YTUBE_DL:=youtube-dl}"
echo "yt-format: ${YT_FORMAT:=18}"
echo "URL: $URL"

# if URL is not given guessing it from last page visited in Chromium:
if [ -z "$URL" ]; then
    #history=/tmp/OMXhist
    #cp ~/.config/chromium/Default/History $history
    #url=$(sqlite3 $history 'SELECT url FROM urls ORDER BY last_visit_time DESC LIMIT 1')
    SQL_CMD="SELECT url FROM urls ORDER BY last_visit_time"
    URL=$(sqlite3 ~/.config/chromium/Default/History $SQL_CMD |grep '^http[s]*://www.youtube.com/' |tail -1)
    #rm $history
fi

case $URL in
  *[\&\?]list=*) PLIST=true
	;;
  *) PLIST=false
	;;
esac

[ -n "$DISPLAY" ] && xset -dpms
if $($PLIST); then
  i=0
  st=0
  while [ $i -lt 1 -o -n "$DL_URL" -o $st -gt 0 ]; do
    i=$[i+1]
#    dlurl=$(youtube-dl --playlist-start=$i --playlist-end=$i -f "best[height<=?480]/best" -g "$url")
    DL_URL=$($YTUBE_DL --playlist-start=$i --playlist-end=$i -f $YT_FORMAT -g "$URL" )
    st=$?
    echo "$i:$DL_URL" >>$TMPFIL
  done  & # converting the download urls separately
  # waiting for the first track:
  echo -n ".."
  while ! [ -s $TMPFIL ]; do sleep 2; done
  j=0
  while true; do
    j=$[j+1]
    DL_URL=$( grep "^$j:" $TMPFIL |cut -f2- -d: )
    # no more track (youtube-dl returned empty string)
    [ -z "$DL_URL" ] && echo "!" && break
    echo -n $j
    if [ -z "$DL_OPTS" ]; then
	$YTUBE_DL --playlist-start=$j --playlist-end=$j -f $YT_FORMAT "$URL"
    else
	$PLAYER $OPTS "$DL_URL"
	[ -n "$DISPLAY" ] && xrefresh -display :0
    fi
    # waiting for the next track:
    echo -n ".."
    while ! [ `wc -l <$TMPFIL` -gt $j ]; do sleep 2; done
  done
else # not playlist
  if [ -z "$DL_OPTS" ]; then
    $YTUBE_DL -f $YT_FORMAT "$URL"
#  dlurl=$(youtube-dl --cookies $cookiefile -g "$url" |grep mime=audio)
  else
    DL_URL=$($YTUBE_DL -f $YT_FORMAT $DL_OPTS "$URL" )
    echo "$DL_URL"
    $PLAYER $OPTS "$DL_URL"
    [ -n "$DISPLAY" ] && xrefresh -display :0
  fi
fi

rm $TMPFIL $COOKIES
[ -n "$DISPLAY" ] && xset +dpms
echo -n "Press ENTER!"
read
